>>>部署lnmp环境
		yum -y install gcc pcre-devel zlib-devel openssl-devel
		tar -zxf nginx-1.12.2.tar.gz
		cd nginx-1.12.2/
		./configure --with-http_ssl_module
		make &&  make install
		yum -y install php php-mysql mariadb  mariadb-devel mariadb-server php-fpm
		开启9000端口PHP
		vim /usr/local/nginx/conf/nginx.conf  
		systemctl start mariadb;systemctl enable mariadb
		systemctl start php-fpm;systemctl enable php-fpm
		/usr/local/nginx/sbin/nginx
		netstat -antup|grep -E ":9000|:3306|:80"
		测试php正常
		vim /usr/local/nginx/html/test.php
			<?php
			$i=30;
			echo $i;
			?>
		curl http://localhost/test.php
>>>安装zabbix		
		yum -y install net-snmp-devel curl-devel libevent-devel
		-net-snmp-devel 支持snmp协议
		-curl-devel 支持curl访问web页面
		-libevent-devel
		./configure  --enable-server --enable-agent --enable-proxy --with-mysql=/usr/bin/mysql_config --with-net-snmp --with-libcurl
		make install
>>>		
		with-mysql  mysql服务配置信息路径
		enable-server 监控服务程序
		enable-proxy  安装代理程序
		enable-agent  安装客户端程序
>>>		
		/usr/local/etc/配置文件
		/usr/local/bin/使用命令
		/usr/local/sbin/启动服务命令
>>>配置数据库		
		MariaDB [(none)]> create database zabbix character set utf8;
		MariaDB [(none)]> grant all on zabbix.* to zabbix@"localhost" identified by 'zabbix';
>>>导入数据
		mysql -uzabbix -pzabbix zabbix <database/mysql/schema.sql 
		mysql -uzabbix -pzabbix zabbix <database/mysql/images.sql 
		mysql -uzabbix -pzabbix zabbix <database/mysql/data.sql 			
>>>创建网页文件
		cd /root/zabbix/zabbix-3.4.4/frontends/php
		cp -a * /usr/local/nginx/html/
		chmod -R 777 /usr/local/nginx/html/
>>>修改nginx服务的配置,满足php运行页面要求
		vim /usr/local/nginx/conf/nginx.conf
			http {
        fastcgi_buffers 8 16k;			//缓存php生成的页面内容,8个16k
        fastcgi_buffer_size 32k;		//缓存php生产的头部信息
        fastcgi_connect_timeout 300;//连接php的超时时间
        fastcgi_send_timeout 300;	//发送请求的超时时间
        fastcgi_read_timeout 300;	//读取请求的超时时间
				......}
		/usr/local/nginx/sbin/nginx -s stop
		/usr/local/nginx/sbin/nginx
>>>初始化准备
		yum -y install php-gd php-xml php-ldap
		长字符串传输包php-bcmath php-mbstring
		yum -y install php-bcmath php-mbstring
		vim /etc/php/.ini
			 672 post_max_size = 32M
			 384 max_execution_time = 300
 			 394 max_input_time = 300
    		 878 date.timezone = Asia/Shanghai
		systemctl restart php-fpm.service
>>>页面安装		
		http://192.168.2.2/setup.php
				Zabbix server details
					Host		IP(192.168.2.2)
>>>
		Database type	MySQL
		Database server	localhost
		Database port	default
		Database name	zabbix
		Database user	zabbix
		Database password	******
>>>		 	
		Zabbix server	192.168.2.2
		Zabbix server port	10051
		Zabbix server name	zhj
		页面数据存储在/usr/local/nginx/html/conf/zabbix.conf.php
>>>登录web页面
		用户名admin 密码zabbix
		vim /usr/local/etc/zabbix_server.conf
	 			85  DBHost=localhost			//数据库主机
	 			95 DBName=zabbix					//数据库名称
	 			111 DBUser=zabbix				//数据库账户
	       119  DBPassword=zabbix		//数据库密码
         38 LogFile=/tmp/zabbix_server.log   //日志
			useradd zabbix
			zabbix_server 
			netstat -antup|grep :10051
			killall -9 zabbix_server
>>>配置监控服务器(服务端)
			只需要安装agent
			./configure  --enable-agent
				vim /usr/local/etc/zabbix_agentd.conf
					93 Server=127.0.0.1,192.168.2.2
					134 ServerActive=192.168.2.2:10051
				useradd zabbix
				zabbix_agentd
>>>
		页面设置主机 --模板
>>>自定义key
		vim /usr/local/etc/zabbix_agentd.conf
    	280  UnsafeUserParameters=1  //是否允许自定义key
	  264 # Include=/usr/local/etc/zabbix_agentd.conf.d/   //加载配置文件目录
		/usr/local/etc/zabbix_agentd.conf.d/test.conf
			UserParameter=test, wc -l /etc/passwd | awk '{print $1}'
		killall zabbix_agentd
		zabbix_get -s 127.0.0.1 -k test
>>>
		页面设置模板,应用集,监控项,关联主机.

---------------------------
>>>zabbix 报警机制
[root@localhost ~]# yum -y install postfix
[root@localhost ~]# systemctl restart postfix.service 
[root@localhost ~]# systemctl enable postfix.service 
[root@localhost ~]# netstat -antup|grep 25
tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      1982/master 
[root@localhost ~]# hostnamectl set-hostname zabbixserver
[root@localhost ~]# echo "127.0.0.1 zabbixserver" >> /etc/hosts
[root@localhost ~]# yum -y install mailx
[root@localhost ~]# which mail
[root@localhost ~]# mail -s 'dc' zabbix </etc/hosts
[root@localhost ~]# su - zabbix
[zabbix@zabbixserver ~]$ mail
页面创建触发器,创建动作 ,创建用户名 创建邮件发送人

---------------------
设置邮件
>>>主动模式
		1.客户端安装软件
		yum -y install gcc pcre-devel
		./configure --enable-agent
		修改配置文件
		 vim /usr/local/etc/zabbix_agentd.conf
			 93 #Server=127.0.0.1   //注释该行，允许谁监控本机
			 118  StartAgents=0    //只启动进程不启端口
			 132  ServerActive=192.168.2.5    //默认端口10051
			 145 Hostname=web201					//告诉监控服务器，是谁发的数据信息
			 183  RefreshActiveChecks=120  //默认120秒检测一次(客户端向服务器发生请求时间)
		启动zabbix-agent服务	
		ps -C zabbix_agentd
>>>
	页面创建主机名称要与配置文件hostname名称一致





nmcli con mod eth1 ipv4.method manual ipv4.addresses 192.168.2.2/24 connection.autoconnect yes  ;nmcli con up eth1;hostnamectl set-hostname zabbixserver

nmcli con mod eth1 ipv4.method manual ipv4.addresses 192.168.2.4/24 connection.autoconnect yes  ;nmcli con up eth1;hostnamectl set-hostname webzabbix

网络状态
syn_sent (客户端状态)
syn_rcvd
established

fin_wait1 
fin_wait2
fin_wait
close_wait
last_acks



>>##selinux
		sestatus
		配置文件/etc/selinux/config
		disabled 禁用
		permissive 宽松/允许模式
		enforcing 强制模式

>>>selinux日志
		yum -y install setroubleshoot.*;reboot
		systemctl restart httpd
		tail /var/log/messages
		sealert -l 0be3d5ab-cf0c-4e07-99a0-9e66e8f392b4
		semanage port -a -t http_port_t  -p tcp 8070
		systemctl restart httpd
>>>
>>>


-----------------------------
Taren1.bgsn
>>>
>>> 
		rpm -qf /usr/bin/gpg
		gpg --version
>>>gpg数据对称加解密
		gpg  -c  文件
		gpg  -d  文件
>>>gpg数据非对称加解密			
		解密方 创建秘钥对
					gpg --gen-key
					cd ~/.gnupg
						pubring.gpg 公钥 pubring.gpg~ 公钥备份文件
						secring.gpg 私钥文件
				  导出公钥匙
				  gpg --export -a > userb.pub
				  cat userb.pub
				  共享公钥
			    mv userb.pub /tmp/
		加密方  导入公钥
					gpg --import /tmp/userb.pub
					ll /home/usera/.gnupg/secring.gpg
				   使用公钥加密明文文件
				  gpg -e -r userb t1.txt 
				      -r  真实姓名：userb
					 cp t1.txt.gpg /tmp/
				   共享加密后的文件		  
				  gpg -d /tmp/t1.txt.gpg > ~/t2.txt
>>>gpg数字签名
		加密
			gpg -b t2.txt
			mv t2* /tmp/
		解密
			pgp --verify /tmp/t2.txt.sig

###扫描抓包
>>>扫描
		scan 主动探测
		sniff 被动监听/嗅探
		capture 数据包捕获(抓包)
>>>nmap
		tcpdump
		wireshark
>>>>
		yum -y install nmap
		nmap -sP 176.19.5.1-254
		nmap -sP 176.19.5.200,57,69,70
		nmap 176.19.5.49   //默认扫描TCP开放的端口
		nmap  -p 8070 192.168.2.100  //指定扫描端口
		nmap -sP 域名
>>>tcpdump抓包
		装什么软件才会有命令.
		[root@room9pc01 ~]# which tcpdump
		/sbin/tcpdump
		[root@room9pc01 ~]# rpm -qf /sbin/tcpdump

----------------------------------
>>##网站服务安全
>>>安装时禁用不需要的模块
		 ./configure --without-http_autoindex_module --without-http_ssi_module 
>>>修改版本号
		nginx-1.12.2/src/http/ngx_http_header_filter_module.c
			static u_char ngx_http_server_string[] = "Server: Oracle" CRLF;
			static u_char ngx_http_server_full_string[] = "Server: Oracle" CRLF;
			static u_char ngx_http_server_build_string[] = "Server: 11g" CRLF ;
>>>限制并发
		http {
        limit_req_zone $binary_remote_addr zone=aaa:10m rate=1r/s;
				 server {
        limit_req zone=aaa burst=5;
>>>拒绝非法访问
		 server {
        listen       80;
        if  ($request_method  !~ ^(GET|POST)$ ) {
                return 444;
        }
	  curl -i -X GET http://192.168.4.203
	  curl -i -X HEAD http://192.168.4.203
>>>防止buffer溢出
		页面数据占用空间
		最大占用16k
		httpd头部信息默认值1k,最大不能超过16k

>>>tomcat隐藏版本信息
		cd lib/; jar -xf catalina.jar
		#源码修改 http://192.168.4.203:8080/aaa.jsp   不存在页面
	 /usr/local/tomcat/lib/org/apache/catalina/util/ServerInfo.properties
		#配置文件修改  curl -I http://192.168.4.203:8080/aaa.jsp
							curl -I http://192.168.4.203:8080
		vim +69 /usr/local/tomcat/conf/server.xml
				    <Connector port="8080"  ......server="AAAAAA"/>

>>>降权启用
		useradd tomcat
		chown -R tomcat:tomcat /usr/local/tomcat/
		su -c "/usr/local/tomcat/bin/startup.sh"  tomcat
		netstat -antup|grep java
		ps aux |grep java
>>>删除默认的测试页面
		rm -rf /usr/local/tomcat/webapps/*
-----------------------------
>>>###iptables服务的组成
		表:功能分类
			包过滤功能,filter
			地址转换功能, nat
			打标记,  mangle
			状态跟踪 raw
		链:数据包传输的方向
			进入防火墙主机的数据包 		INPUT
			从防火墙主机出去的数据包 	OUTPUT
			经过防火墙主机的数据包	 	FORWARD
			处理路由前的数据包 			PREROUTING
			处理路由后的数据包				POSTROUTING
>>>		
		iptables -t 表名 选项  链名 条件 -j 处理动作
		   
		   
		   
		   iptables -t filter -L INPUT  //查看 filter表中的规则 
		   -L 查看规则列表
		   -D 删除规则列表
		   -F 情况所有规则
		   -I 插入规则列表第一条 	
		   -P 设置默认规则
		   iptables -t filter -D INPUT 1  //删除
		   iptables -t filter -P INPUT  DROP
		   
>>>>				   
			主机型防火墙(自己保护自己) filter表中的INPUT链
			网络型防火墙(防火墙服务器主机架设在2个网络之间)  使用filter表中的FORWARD链   
>>>
		net.ipv4.ip_forward = 1
		
>>>SNAT		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		
>>>		








